{"version":3,"sources":["utils/api.js","context/CurrentUserContext.js","components/Card.js","components/Profile.js","components/Main.js","components/Navbar.js","components/PopupWithForm.js","components/MarkupForPopups.js","components/Login.js","images/header/logoFon.svg","components/Header.js","components/Footer.js","components/Loader/Loader.js","components/Register.js","components/Error/ErrorPage.js","components/ImagePopup.js","images/check/iconOk.svg","images/check/iconUnion.svg","components/InfoTooltip.js","components/AddPlacePopup.js","components/Error/ErrorBoundary.js","components/ProtectedRoute.js","components/EditAvatarPopup.js","components/DeleteCardPopup.js","components/EditProfilePopup.js","components/Page.js","components/App.js","index.js"],"names":["api","url","login","user","cards","auth","this","_url","_user","_cards","token","res","includes","status","json","Promise","reject","Error","arg","Object","fromEntries","entries","filter","fetch","method","headers","body","JSON","stringify","then","_getResponse","password","email","Authorization","name","about","avatar","link","infoId","isLike","toggleMethod","id","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardDelete","onCardLike","_id","useContext","useState","visible","setVisible","Fragment","className","src","alt","onError","onClick","owner","type","title","likes","find","map","length","ProfileUser","onAddPlace","onEditAvatar","onEditProfile","Main","handleCardLike","handleCardClick","handleCardDelete","createdAt","Navbar","info","signOut","selectorPlace","history","useHistory","setTitle","selector","classes","navbar_place_header","navbar_place_form","navbar_place_page","useEffect","location","pathname","to","evt","defaultProps","PopupWithForm","active","isOpen","onClose","children","onSubmit","buttonTitle","userAuthInfo","disabledButton","popup","popup_opened","classTitle","popup__title_type_check","classButtonSubmit","onMouseDown","currentTarget","target","disabled","undefined","props","inputValidClass","popup__input_type_error","avatarUser","placeholder","value","onChange","editAvatar","onInput","validationAvatar","required","avatarMessage","nameProfile","minLength","maxLength","editName","validationProfile","profileMessage","editAbout","place","editPlace","validationPlace","placeMessage","editLink","editEmail","validationCheck","editPassword","autoComplete","classTool","icon","Login","onLogin","isLoadingButton","localEmail","localStorage","getItem","activeButton","setActiveButton","emailAndPassword","setEmailAndPassword","validCheck","setValidCheck","checkPopup","preventDefault","MarkupForPopups","validity","valid","validationMessage","Header","toggleNavbar","isNavbarOpen","headerLogo","Footer","Date","getFullYear","Loader","Register","onRegister","register","setRegister","linkInfo","setRegisterUser","ErrorPage","message","error","style","color","display","flexDirection","justifyContent","alignItems","minHeight","ImagePopup","selectedCard","toggleEventListenerWindow","pic","popup__pic_type_check","InfoTooltip","isOpenTool","tool","enable","disable","AddPlacePopup","placePopup","namePlace","setPlace","setLink","validPlace","setValidPlace","ErrorBoundary","state","errorInfo","setState","whiteSpace","toString","componentStack","Component","ProtectedRoute","loggedIn","EditAvatarPopup","onUpdateAvatar","avatarPopup","setAvatar","validAvatar","setValidAvatar","DeleteCardPopup","isCard","onDeleteCard","deletePopup","EditProfilePopup","onUpdateUser","profile","currentUser","setName","description","setDescription","validProfile","setValidProfile","Page","App","setIsCard","isAddPlacePopupOpen","setAddPlacePopup","isEditAvatarPopupOpen","setEditAvatarPopup","isEditProfilePopupOpen","setEditProfilePopup","isConfirmDeletePopupOpen","setConfirmDeletePopup","setNavbarOpen","setCurrentUser","setCards","loading","setLoading","statusOk","setIsOk","setLoggedIn","statusError","setError","isOpenCard","setOpenCard","isOpenCheck","setOpenCheck","isTooltip","setTooltip","setSelectedCard","buttonLoading","setButtonLoading","setUserAuthInfo","infoMessage","text","bool","closeAllPopups","handleLogin","push","start","string","all","getInfoForUser","getInfoForCards","dataUser","dataCards","catch","err","console","removeItem","finally","handleLogOut","clear","closeAllPopupsEsc","key","a","window","addEventListener","removeEventListener","Provider","checked","exact","path","isLiked","some","i","changeLikeCardStatus","newCard","newCards","c","addCard","updateUserAvatar","infoAvatar","updateUserInfo","infoUser","idCard","deleteCard","authorizationPost","data","setItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cb815fb.chunk.js","sourcesContent":["class Api {\n  constructor({\n    url,\n    login,\n    user,\n    cards,\n    auth,\n  }) {\n    this._url = url;\n    this._user = user;\n    this._cards = cards;\n    this.login = login;\n    this.auth = auth;\n    this.token = '';\n  }\n\n  _getResponse(res) {\n    const status = [200, 400, 401];\n    if (status.includes(res.status)) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Ошибка api: ${res.status}`));\n  }\n\n  register(arg) { // регистрация\n    const user = Object.fromEntries(Object.entries(arg)\n      .filter(([key, value]) => [key, value][1] !== ''));\n    return fetch(`${this._url}${this.auth}`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n      body: JSON.stringify({ ...user }),\n    }).then(this._getResponse);\n  }\n\n  authorizationPost({ password, email }) { // получение токена\n    return fetch(`${this._url}${this.login}`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n      body: JSON.stringify({ password, email }),\n    }).then(this._getResponse);\n  }\n\n  getInfoForUser() {\n    return fetch(`${this._url}${this._user}`, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n        Authorization: `Bearer ${this.token}`,\n      },\n    }).then(this._getResponse);\n  }\n\n  getInfoForCards() {\n    return fetch(`${this._url}${this._cards}`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    }).then(this._getResponse);\n  }\n\n  updateUserInfo({ name, about }) {\n    return fetch(`${this._url}${this._user}`, {\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n      body: JSON.stringify({\n        name,\n        about,\n      }),\n    }).then(this._getResponse);\n  }\n\n  updateUserAvatar({ avatar }) {\n    return fetch(`${this._url}${this._user}/avatar`, {\n      method: 'PATCH',\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n      body: JSON.stringify({\n        avatar,\n      }),\n    }).then(this._getResponse);\n  }\n\n  addCard({ name, link }) {\n    return fetch(`${this._url}${this._cards}`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n      body: JSON.stringify({\n        name,\n        link,\n      }),\n    }).then(this._getResponse);\n  }\n\n  changeLikeCardStatus(infoId, isLike) {\n    const toggleMethod = isLike ? 'PUT' : 'DELETE';\n    return fetch(`${this._url}${this._cards}/${infoId}/likes`, {\n      method: toggleMethod,\n\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    }).then(this._getResponse);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._url}${this._cards}/${id}`, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${this.token}`,\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    }).then(this._getResponse);\n  }\n}\n\nconst api = new Api({\n  url: '/',\n  user: 'users/me',\n  cards: 'cards',\n  login: 'signin',\n  auth: 'signup',\n});\n\nexport default api;\n","import React from 'react';\n\nconst CurrentUserContext = React.createContext();\n\nexport default CurrentUserContext;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CurrentUserContext from '../context/CurrentUserContext';\n\nfunction Card({\n  card,\n  onCardClick,\n  onCardDelete,\n  onCardLike,\n}) {\n  const { _id } = React.useContext(CurrentUserContext);\n  const [visible, setVisible] = React.useState(true);\n\n  return (\n    <React.Fragment>\n      {visible && (\n        <div className='element'>\n          <img\n            src={card.link}\n            alt={card.name}\n            className='element__pic'\n            onError={() => {\n              setVisible(false);\n            }}\n            onClick={() => onCardClick(card)}\n          />\n          <button\n            className={`element__button-trash ${\n              card.owner === _id\n                ? 'element__button-trash_visible'\n                : ''\n            }`}\n            type='button'\n            title='кнопка удаления карточки'\n            onClick={() => onCardDelete(card)}\n          ></button>\n          <div className='element__info'>\n            <h2 className='element__title' title={card.name}>\n              {card.name}\n            </h2>\n            {card.likes && (\n              <div className='element__like'>\n                <button\n                  className={`element__button-like element__button-like_color_white ${\n                    card.likes.find((id) => id === _id)\n                      ? 'element__button-like_color_black'\n                      : ''\n                  }`}\n                  type='button'\n                  title='кнопка для лайков'\n                  onClick={() => onCardLike(card)}\n                ></button>\n                <span\n                  className='element__counter-like'\n                  title={card.likes.map(() => '🖤')}\n                >\n                  {card.likes.length}\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nCard.propTypes = {\n  card: PropTypes.object,\n  onCardLike: PropTypes.func.isRequired,\n  onCardClick: PropTypes.func.isRequired,\n  onCardDelete: PropTypes.func.isRequired,\n};\n\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CurrentUserContext from '../context/CurrentUserContext';\n\nfunction ProfileUser({ onAddPlace, onEditAvatar, onEditProfile }) {\n  const {\n    name,\n    about,\n    avatar,\n    _id,\n  } = React.useContext(CurrentUserContext);\n\n  return (\n   <section className='profile page__profile'>\n     <img\n       id={_id}\n       src={avatar}\n       alt='Аватарка'\n       onClick={onEditAvatar}\n       className='profile__avatar'\n     />\n     <div className='profile__info'>\n       <h1 className='profile__title' title={name}>\n         {name}\n       </h1>\n       <button\n         type='button'\n         title='изменить данные профиля'\n         className='profile__edit-button'\n         onClick={onEditProfile}></button>\n       <p className='profile__subtitle' title={about}>\n         {about}\n       </p>\n     </div>\n     <button\n       type='button'\n       title='добавить картинки'\n       className='profile__add-button'\n       onClick={onAddPlace}></button>\n   </section>\n  );\n}\n\nProfileUser.propTypes = {\n  onAddPlace: PropTypes.func,\n  onEditAvatar: PropTypes.func,\n  onEditProfile: PropTypes.func,\n};\n\nexport default ProfileUser;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from './Card';\nimport ProfileUser from './Profile';\nimport '../index.css';\n\nfunction Main({\n  cards,\n  onAddPlace,\n  onEditAvatar,\n  onEditProfile,\n  handleCardLike,\n  handleCardClick,\n  handleCardDelete,\n}) {\n  return (\n    <React.Fragment>\n      <ProfileUser\n        onAddPlace={onAddPlace}\n        onEditAvatar={onEditAvatar}\n        onEditProfile={onEditProfile}\n      />\n      <div className='elements page__elements'>\n        {cards.map((card) => (\n        <Card\n            card={card}\n            key={card.createdAt + card._id}\n            onCardLike={handleCardLike}\n            onCardClick={handleCardClick}\n            onCardDelete={handleCardDelete}\n          />\n        ))}\n      </div>\n    </React.Fragment>\n  );\n}\n\nMain.propTypes = {\n  cards: PropTypes.array,\n  onAddPlace: PropTypes.func.isRequired,\n  onEditAvatar: PropTypes.func.isRequired,\n  onEditProfile: PropTypes.func.isRequired,\n  handleCardLike: PropTypes.func.isRequired,\n  handleCardClick: PropTypes.func.isRequired,\n  handleCardDelete: PropTypes.func.isRequired,\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport classes from 'classnames';\nimport PropTypes from 'prop-types';\nimport CurrentUserContext from '../context/CurrentUserContext';\n\nfunction Navbar({\n  info,\n  link,\n  signOut,\n  selectorPlace,\n}) {\n  const history = useHistory();\n  const [title, setTitle] = React.useState('');\n  const { email } = React.useContext(CurrentUserContext);\n  const selector = classes('navbar', {\n    navbar_place_header: selectorPlace === 'header',\n    navbar_place_form: selectorPlace === 'form',\n    navbar_place_page: selectorPlace === 'page',\n  });\n\n  React.useEffect(() => {\n    if (history.location.pathname === '/sign-up') {\n      setTitle('Вход');\n    } else if (history.location.pathname === '/sign-in') {\n      setTitle('Регистрация');\n    } else if (history.location.pathname === '/') {\n      setTitle('Выйти');\n    }\n  }, [history.location.pathname]);\n  return (\n    <nav className={selector}>\n      {email && <p className='navbar__info'>{email}</p>}\n      {selectorPlace === 'form' && <p className='navbar__info'>{info}</p>}\n      <Link\n        className='navbar__link'\n        to={link}\n        onClick={(evt) => signOut(evt)}>\n        {title}\n      </Link>\n    </nav>\n  );\n}\n\nNavbar.propTypes = {\n  info: PropTypes.string,\n  link: PropTypes.string,\n  signOut: PropTypes.func,\n  selectorPlace: PropTypes.string,\n};\n\nNavbar.defaultProps = {\n  selectorPlace: '',\n  info: '',\n  link: '',\n};\n\nexport default Navbar;\n","import React from 'react';\nimport classes from 'classnames';\nimport PropTypes from 'prop-types';\nimport Navbar from './Navbar';\n\nfunction PopupWithForm({\n  active,\n  name,\n  title,\n  isOpen,\n  onClose,\n  children,\n  onSubmit,\n  buttonTitle,\n  userAuthInfo,\n  signOut,\n}) {\n  const disabledButton = active ? 'disabled' : '';\n  const popup = classes(`popup popup_type_${name}`, { popup_opened: isOpen });\n  const classTitle = classes('popup__title', {\n    popup__title_type_check: name === 'check',\n  });\n  const classButtonSubmit = classes('popup__button-submit', {\n    'popup__button-submit_type_check': name === 'check',\n    'popup__button-submit_type_register': userAuthInfo,\n    'popup__button-submit_disabled': active && name !== 'check',\n  });\n\n  return (\n    <React.Fragment>\n      <div\n        className={popup}\n        onMouseDown={(evt) => evt.currentTarget === evt.target && onClose()}>\n        <form\n          className={`popup__container popup__container_type_${name}`}\n          name={name}\n          onSubmit={onSubmit}>\n          <h2 className={classTitle}>{title}</h2>\n          {children}\n          <button\n            className={classButtonSubmit}\n            type='submit'\n            title={buttonTitle}\n            disabled={disabledButton}>\n            {buttonTitle}\n          </button>\n          {userAuthInfo && (\n            <Navbar\n              info={userAuthInfo.info}\n              link={userAuthInfo.link}\n              signOut={signOut}\n              selectorPlace={'form'}\n            />\n          )}\n          {onClose && (\n            <button\n              className='popup__button-close'\n              type='button'\n              title='закрыть'\n              onClick={onClose}></button>\n          )}\n        </form>\n      </div>\n    </React.Fragment>\n  );\n}\n\nPopupWithForm.propTypes = {\n  active: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  name: PropTypes.string,\n  title: PropTypes.string,\n  children: PropTypes.object || PropTypes.func,\n  buttonTitle: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func,\n  userAuthInfo: PropTypes.object,\n  signOut: PropTypes.func,\n};\n\nPopupWithForm.defaultProps = {\n  active: false,\n  isOpen: false,\n  children: null,\n  onClose: undefined,\n};\n\nexport default PopupWithForm;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport classes from 'classnames';\n\nexport default {\n  Avatar: function Avatar(props) {\n    const inputValidClass = classes('popup__input', {\n      popup__input_type_error: props.avatarUser,\n    });\n    return (\n      <React.Fragment>\n        <input\n          className={inputValidClass}\n          type='url'\n          placeholder='Ссылка на картинку'\n          id='input-avatar'\n          name='avatar'\n          value={props.avatarUser}\n          onChange={props.editAvatar}\n          onInput={props.validationAvatar}\n          required\n        />\n        {props.avatar !== '' && (\n          <div className='popup__error'>\n            <span\n              className='popup__input-error popup__input-error_active'\n              id='input-avatar-error '\n            >\n              {props.avatarMessage}\n            </span>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  },\n  Profile: function Profile(props) {\n    const inputValidClass = classes('popup__input', {\n      popup__input_type_error: props.nameProfile || props.about,\n    });\n    return (\n      <React.Fragment>\n        <input\n          className={inputValidClass}\n          id='input-name'\n          type='text'\n          name='name'\n          minLength='2'\n          maxLength='40'\n          placeholder='Имя'\n          value={props.nameProfile}\n          onChange={props.editName}\n          onInput={props.validationProfile}\n          required\n        />\n        {props.nameProfile === '' && (\n          <div className='popup__error'>\n            <span\n              className='popup__input-error popup__input-error_active'\n              id='input-name-error'\n            >\n              {props.profileMessage.name}\n            </span>\n          </div>\n        )}\n        <input\n          className={inputValidClass}\n          id='input-about'\n          type='text'\n          name='about'\n          minLength='2'\n          maxLength='200'\n          placeholder='Профессия'\n          value={props.about}\n          onChange={props.editAbout}\n          onInput={props.validationProfile}\n          required\n        />\n        {props.about === '' && (\n          <div className='popup__error'>\n            <span\n              className='popup__input-error popup__input-error_active'\n              id='input-about-error'\n            >\n              {props.profileMessage.about}\n            </span>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  },\n  Place: function Place(props) {\n    const inputValidClass = classes('popup__input', {\n      popup__input_type_error: props.place || props.link,\n    });\n    return (\n      <React.Fragment>\n        <input\n          className={inputValidClass}\n          type='text'\n          placeholder='Название'\n          id='input-place'\n          name='place'\n          minLength='1'\n          value={props.place}\n          maxLength='30'\n          onChange={props.editPlace}\n          onInput={props.validationPlace}\n          required\n        />\n        {props.place === '' && (\n          <div className='popup__error'>\n            <span\n              className='popup__input-error popup__input-error_active'\n              id='input-place-error'\n            >\n              {props.placeMessage.place}\n            </span>\n          </div>\n        )}\n        <input\n          className={inputValidClass}\n          type='url'\n          placeholder='Ссылка на картинку'\n          id='input-link'\n          value={props.link}\n          name='link'\n          onChange={props.editLink}\n          onInput={props.validationPlace}\n          required\n        />\n        {props.link !== '' && (\n          <div className='popup__error'>\n            <span\n              className='popup__input-error popup__input-error_active'\n              id='input-link-error'\n            >\n              {props.placeMessage.link}\n            </span>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  },\n  Login: function Login(props) {\n    const inputValidClass = classes('popup__input popup__input_type_check', {\n      popup__input_type_error: props.password || props.email,\n    });\n    return (\n      <React.Fragment>\n        <input\n          className={inputValidClass}\n          type='email'\n          placeholder='Почта'\n          id='input-email'\n          value={props.email}\n          name='email'\n          onChange={props.editEmail}\n          onInput={props.validationCheck}\n          required\n        />\n        {props.email !== '' && (\n          <div className='popup__error'>\n            <span\n              className='popup__input-error popup__input-error_active'\n              id='input-email-error'\n            >\n              {props.placeMessage.email}\n            </span>\n          </div>\n        )}\n        <input\n          className={inputValidClass}\n          type='password'\n          placeholder='Пароль'\n          id='input-password'\n          name='password'\n          minLength='6'\n          value={props.password}\n          maxLength='30'\n          onChange={props.editPassword}\n          onInput={props.validationCheck}\n          autoComplete='off'\n          required\n        />\n        {props.password && (\n          <div className='popup__error'>\n            <span\n              className='popup__input-error popup__input-error_active'\n              id='input-password-error'\n            >\n              {props.placeMessage.password}\n            </span>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  },\n  Register: function Register(props) {\n    const inputValidClass = classes('popup__input popup__input_type_check', {\n      popup__input_type_error:\n       (props.password || props.email || props.name || props.about || props.avatarUser),\n    });\n    return (\n      <React.Fragment>\n        <input\n          className={inputValidClass}\n          id='input-name'\n          type='text'\n          name='name'\n          minLength='2'\n          maxLength='40'\n          placeholder='Ваше имя'\n          value={props.name}\n          onChange={props.editName}\n          onInput={props.validationCheck}\n        />\n        {props.name !== '' && (\n          <div className='popup__error'>\n            <span\n              className='popup__input-error popup__input-error_active'\n              id='input-name-error'\n            >\n              {props.placeMessage.name}\n            </span>\n          </div>\n        )}\n        <input\n          className={inputValidClass}\n          id='input-about'\n          type='text'\n          name='about'\n          minLength='2'\n          maxLength='200'\n          placeholder='Ваша профессия'\n          value={props.about}\n          onChange={props.editAbout}\n          onInput={props.validationCheck}\n        />\n        {props.about !== '' && (\n          <div className='popup__error'>\n            <span\n              className='popup__input-error popup__input-error_active'\n              id='input-about-error'\n            >\n              {props.placeMessage.about}\n            </span>\n          </div>\n        )}\n        <input\n          className={inputValidClass}\n          type='email'\n          placeholder='Почта'\n          id='input-email'\n          value={props.email}\n          name='email'\n          onChange={props.editEmail}\n          onInput={props.validationCheck}\n          title='обязательное поле'\n          required\n        />\n        {props.email !== '' && (\n          <div className='popup__error'>\n            <span\n              className='popup__input-error popup__input-error_active'\n              id='input-email-error'\n            >\n              {props.placeMessage.email}\n            </span>\n          </div>\n        )}\n        <input\n          className={inputValidClass}\n          type='password'\n          placeholder='Пароль'\n          id='input-password'\n          name='password'\n          minLength='6'\n          value={props.password}\n          maxLength='30'\n          onChange={props.editPassword}\n          onInput={props.validationCheck}\n          autoComplete='off'\n          title='обязательное поле'\n          required\n        />\n        {props.password && (\n          <div className='popup__error'>\n            <span\n              className='popup__input-error popup__input-error_active'\n              id='input-password-error'\n            >\n              {props.placeMessage.password}\n            </span>\n          </div>\n        )}\n        <input\n          className={inputValidClass}\n          type='url'\n          placeholder='Ссылка на аватарку'\n          id='input-avatar'\n          name='avatar'\n          value={props.avatarUser}\n          onChange={props.editAvatar}\n          onInput={props.validationCheck}\n        />\n        {props.avatar !== '' && (\n          <div className='popup__error'>\n            <span\n              className='popup__input-error popup__input-error_active'\n              id='input-avatar-error '\n            >\n              {props.placeMessage.avatar}\n            </span>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  },\n  Tool: function Tool(props) {\n    return (\n      <div\n        className={props.classTool}\n        onMouseDown={(evt) => evt.currentTarget === evt.target && props.onClose()\n        }\n      >\n        <div className='popup__container popup__container_type_tool'>\n          <img\n            className='popup__pic popup__pic_type_tool'\n            src={props.icon}\n            alt={props.alt}\n          ></img>\n          <p className='popup__title popup__title_type_tool'>{props.title}</p>\n          <button\n            className='popup__button-close'\n            onClick={props.onClose}\n          ></button>\n        </div>\n      </div>\n    );\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PopupWithForm from './PopupWithForm';\nimport MarkupForPopups from './MarkupForPopups';\n\nfunction Login({\n  isOpen,\n  onLogin,\n  signOut,\n  isLoadingButton,\n}) {\n  const localEmail = localStorage.getItem('email') ? localStorage.getItem('email') : '';\n  const [activeButton, setActiveButton] = React.useState(true);\n  const [emailAndPassword, setEmailAndPassword] = React.useState({\n    email: localEmail || '',\n    password: '',\n  });\n  const [validCheck, setValidCheck] = React.useState({\n    password: '',\n    email: '',\n  });\n  const textButton = isLoadingButton ? 'Проверка...' : 'Войти';\n  const checkPopup = {\n    name: 'check',\n    title: 'Вход',\n    buttonTitle: `${textButton}`,\n  };\n\n  function validationCheck(evt) {\n    if (!evt.target.validity.valid) {\n      setValidCheck({ [evt.target.name]: evt.target.validationMessage });\n    }\n    setValidCheck({ [evt.target.name]: '' });\n  }\n\n  function setPasswordUser(evt) {\n    setEmailAndPassword({\n      ...emailAndPassword,\n      password: evt.target.value,\n    });\n    setActiveButton(!evt.target.value);\n  }\n\n  function setEmailUser(evt) {\n    setEmailAndPassword({ ...emailAndPassword, email: evt.target.value });\n    setActiveButton(!evt.target.value);\n  }\n\n  function verifiesAuthorization(evt) {\n    evt.preventDefault();\n    if (!emailAndPassword.password || !emailAndPassword.email) {\n      return;\n    }\n    onLogin(evt, emailAndPassword);\n  }\n\n  return (\n    <React.Fragment>\n      <div className='page__elements'>\n        <PopupWithForm\n          name={checkPopup.name}\n          title={checkPopup.title}\n          buttonTitle={checkPopup.buttonTitle}\n          isOpen={isOpen}\n          active={activeButton}\n          signOut={signOut}\n          onSubmit={verifiesAuthorization}>\n          <MarkupForPopups.Login\n            email={emailAndPassword.email}\n            password={emailAndPassword.password}\n            placeMessage={validCheck}\n            editEmail={setEmailUser}\n            editPassword={setPasswordUser}\n            validationCheck={validationCheck}\n          />\n        </PopupWithForm>\n      </div>\n    </React.Fragment>\n  );\n}\n\nLogin.propTypes = {\n  isOpen: PropTypes.bool,\n  isLoadingButton: PropTypes.bool,\n  onLogin: PropTypes.func.isRequired,\n  signOut: PropTypes.func,\n};\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/logoFon.8724261e.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport headerLogo from '../images/header/logoFon.svg';\nimport Navbar from './Navbar';\n\nfunction Header({\n  toggleNavbar,\n  signOut,\n  link,\n  selectorPlace,\n  isNavbarOpen,\n}) {\n  return (\n    <header className='header page__header'>\n      <img className='logo logo_place_header' src={headerLogo} alt='Логотип' />\n      <label>\n        <input\n          type='checkbox'\n          className='header__button-menu'\n          onChange={toggleNavbar}></input>\n        <span id='span' className='header__button-menu'></span>\n      </label>\n      {!isNavbarOpen && (<Navbar\n        selectorPlace={selectorPlace}\n        link={link}\n        signOut={signOut}\n      />)}\n    </header>\n  );\n}\n\nHeader.propTypes = {\n  toggleNavbar: PropTypes.func.isRequired,\n  signOut: PropTypes.func,\n  link: PropTypes.string,\n  selectorPlace: PropTypes.string,\n  isNavbarOpen: PropTypes.bool,\n};\n\nexport default Header;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className='footer page__footer'>\n      <p className='footer__copyright'>\n        &copy;{new Date().getFullYear()} Mesto Russia\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport './Loader.css';\n\nfunction Loader() {\n  return <div className='lds-dual-ring'></div>;\n}\n\nexport default Loader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PopupWithForm from './PopupWithForm';\nimport MarkupForPopups from './MarkupForPopups';\n\nfunction Register({\n  isOpen,\n  signOut,\n  onRegister,\n  isLoadingButton,\n}) {\n  const [register, setRegister] = React.useState({\n    password: '',\n    email: '',\n    name: '',\n    about: '',\n    avatar: '',\n  });\n  const [activeButton, setActiveButton] = React.useState(true);\n  const [validCheck, setValidCheck] = React.useState({});\n  const textButton = isLoadingButton ? 'Проверка...' : 'Регистрация';\n  const checkPopup = {\n    name: 'check',\n    title: 'Регистрация',\n    buttonTitle: `${textButton}`,\n    linkInfo: {\n      link: '/sign-in',\n      info: 'Вы уже зарегистрировались?',\n    },\n  };\n\n  function validationCheck(evt) {\n    if (!evt.target.validity.valid) {\n      setValidCheck({ [evt.target.name]: evt.target.validationMessage });\n    }\n    setValidCheck({ [evt.target.name]: '' });\n  }\n\n  function setRegisterUser(evt) {\n    setRegister({ ...register, [evt.target.name]: evt.target.value });\n    setActiveButton(!evt.target.value);\n  }\n\n  function clearInput() {\n    setRegister({\n      ...register,\n      password: '',\n      email: '',\n      name: '',\n      about: '',\n      avatar: '',\n    });\n  }\n\n  function verifiesRegistration(evt) {\n    evt.preventDefault();\n\n    clearInput();\n    onRegister({ ...register });\n  }\n  return (\n    <React.Fragment>\n      <div className=\"page__elements\">\n        <PopupWithForm\n          isOpen={isOpen}\n          active={activeButton}\n          name={checkPopup.name}\n          title={checkPopup.title}\n          buttonTitle={checkPopup.buttonTitle}\n          userAuthInfo={checkPopup.linkInfo}\n          signOut={signOut}\n          onSubmit={verifiesRegistration}\n        >\n          <MarkupForPopups.Register\n            about={register.about}\n            email={register.email}\n            name={register.name}\n            avatarUser={register.avatar}\n            password={register.password}\n            placeMessage={validCheck}\n            editEmail={setRegisterUser}\n            editPassword={setRegisterUser}\n            editAvatar={setRegisterUser}\n            editName={setRegisterUser}\n            editAbout={setRegisterUser}\n            validationCheck={validationCheck}\n          />\n        </PopupWithForm>\n      </div>\n    </React.Fragment>\n  );\n}\n\nRegister.propTypes = {\n  isOpen: PropTypes.bool,\n  isLoadingButton: PropTypes.bool,\n  signOut: PropTypes.func.isRequired,\n  onRegister: PropTypes.func.isRequired,\n};\n\nRegister.defaultProps = {\n  isOpen: false,\n};\n\nexport default Register;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ErrorPage({ error }) {\n  const styleErr = {\n    color: '#f00',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: '60vh',\n  };\n  const { message } = error;\n  return (\n    <React.Fragment>\n      <div style={styleErr}>\n        <h1>{message}</h1>\n        <p style={{ color: '#fff' }}>попробуйте зайти позже</p>\n      </div>\n    </React.Fragment>\n  );\n}\n\nErrorPage.propTypes = {\n  error: PropTypes.object,\n  message: PropTypes.string,\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport classes from 'classnames';\nimport PropTypes from 'prop-types';\n\nfunction ImagePopup({\n  selectedCard,\n  onClose,\n  isOpen,\n  toggleEventListenerWindow,\n}) {\n  React.useEffect(() => {\n    if (isOpen) {\n      toggleEventListenerWindow(true);\n    }\n    return () => {\n      toggleEventListenerWindow(false);\n    };\n  }, [isOpen]);\n\n  const popup = classes('popup popup_type_zoom', { popup_opened: isOpen });\n  const pic = classes('popup__pic', {\n    popup__pic_type_check: selectedCard.name === 'check',\n  });\n  return (\n    <div\n      className={popup}\n      onMouseDown={(evt) => evt.currentTarget === evt.target && onClose()}>\n      <div className='popup__zoom'>\n        <img className={pic} src={selectedCard.link} alt={selectedCard.name} />\n        {selectedCard.name !== 'check' && (\n          <span className='popup__place-pic'>{selectedCard.name}</span>\n        )}\n        <button\n          className='popup__button-close'\n          type='button'\n          title='закрыть'\n          onClick={onClose}></button>\n      </div>\n    </div>\n  );\n}\n\nImagePopup.propTypes = {\n  isOpen: PropTypes.bool,\n  selectedCard: PropTypes.object,\n  onClose: PropTypes.func.isRequired,\n  toggleEventListenerWindow: PropTypes.func.isRequired,\n};\n\nexport default ImagePopup;\n","export default __webpack_public_path__ + \"static/media/iconOk.a9eb6caf.svg\";","export default __webpack_public_path__ + \"static/media/iconUnion.d4ce2a26.svg\";","import React from 'react';\nimport classes from 'classnames';\nimport PropTypes from 'prop-types';\nimport enable from '../images/check/iconOk.svg';\nimport disable from '../images/check/iconUnion.svg';\nimport MarkupForPopups from './MarkupForPopups';\n\nfunction InfoTooltip({ isOpen, onClose, toggleEventListenerWindow }) {\n  const { isOpenTool, status, message } = isOpen;\n  const defaultTitle = status\n    ? 'Вы успешно зарегистрировались.'\n    : 'Что-то пошло не так! Попробуйте ещё раз.';\n  const tool = {\n    title: message !== '' ? message : defaultTitle,\n    alt: status ? 'Регистрация пройдена' : 'Регистрация не пройдена',\n    icon: status ? enable : disable,\n    classTool: classes('popup', {\n      'popup_opened popup__type_tool': isOpenTool,\n    }),\n  };\n\n  React.useEffect(() => {\n    if (isOpenTool) {\n      toggleEventListenerWindow(true);\n    }\n    return () => {\n      toggleEventListenerWindow(false);\n    };\n  }, [isOpenTool]);\n\n  return (\n    <MarkupForPopups.Tool\n      key={tool.id}\n      alt={tool.alt}\n      icon={tool.icon}\n      title={tool.title}\n      classTool={tool.classTool}\n      onClose={onClose}\n    />\n  );\n}\n\nInfoTooltip.propTypes = {\n  isTooltip: PropTypes.object,\n  onClose: PropTypes.func.isRequired,\n  toggleEventListenerWindow: PropTypes.func.isRequired,\n  isOpen: PropTypes.object,\n};\n\nexport default InfoTooltip;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PopupWithForm from './PopupWithForm';\nimport MarkupForPopups from './MarkupForPopups';\n\nfunction AddPlacePopup({\n  isLoadingButton,\n  isOpen,\n  onClose,\n  onAddPlace,\n  toggleEventListenerWindow,\n}) {\n  React.useEffect(() => {\n    if (isOpen) {\n      toggleEventListenerWindow(true);\n    }\n    return () => {\n      toggleEventListenerWindow(false);\n    };\n  }, [isOpen]);\n\n  const textButton = isLoadingButton ? 'Сохранение...' : 'Сохранить';\n  const placePopup = {\n    name: 'place',\n    title: 'Новое место',\n    buttonTitle: `${textButton}`,\n  };\n\n  const [namePlace, setPlace] = React.useState('');\n  const [link, setLink] = React.useState('');\n  const [activeButton, setActiveButton] = React.useState(true);\n\n  const [validPlace, setValidPlace] = React.useState({\n    place: '',\n    link: '',\n  });\n\n  function validationPlace(evt) {\n    if (!evt.target.validity.valid) {\n      setValidPlace({\n        [evt.target.name]: evt.target.validationMessage,\n      });\n    }\n    setValidPlace({ [evt.target.name]: '' });\n  }\n\n  function setPlaceName(evt) {\n    setPlace(evt.target.value);\n    setActiveButton(!evt.target.value);\n  }\n  function setLinkPlace(evt) {\n    setLink(evt.target.value);\n    setActiveButton(!evt.target.value);\n  }\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    setPlace('');\n    setLink('');\n    onAddPlace({\n      name: namePlace,\n      link,\n    });\n  }\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      active={activeButton}\n      name={placePopup.name}\n      title={placePopup.title}\n      buttonTitle={placePopup.buttonTitle}\n      onSubmit={handleSubmit}>\n      <MarkupForPopups.Place\n        link={link}\n        place={namePlace}\n        placeMessage={validPlace}\n        editLink={setLinkPlace}\n        editPlace={setPlaceName}\n        validationPlace={validationPlace}\n      />\n    </PopupWithForm>\n  );\n}\n\nAddPlacePopup.propTypes = {\n  isOpen: PropTypes.bool,\n  isLoadingButton: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  onAddPlace: PropTypes.func.isRequired,\n  toggleEventListenerWindow: PropTypes.func.isRequired,\n};\n\nexport default AddPlacePopup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  render() {\n    const { errorInfo, error } = this.state;\n    if (errorInfo) {\n      return (\n        <div>\n          <h2>Что-то пошло не так!</h2>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {error && error.toString()}\n            <br />\n            {errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  children: PropTypes.array,\n};\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ProtectedRoute = ({ children, loggedIn }) => (\n    <Route>\n      {() => (loggedIn ? (\n          <React.Fragment>{children}</React.Fragment>\n      ) : (\n          <Redirect to='/sign-in' />\n      ))\n      }\n    </Route>\n);\n\nProtectedRoute.propTypes = {\n  loggedIn: PropTypes.bool,\n  children: PropTypes.array,\n};\n\nexport default ProtectedRoute;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PopupWithForm from './PopupWithForm';\nimport MarkupForPopups from './MarkupForPopups';\n\nfunction EditAvatarPopup({\n  isLoadingButton,\n  isOpen,\n  onClose,\n  onUpdateAvatar,\n  toggleEventListenerWindow,\n}) {\n  React.useEffect(() => {\n    if (isOpen) {\n      toggleEventListenerWindow(true);\n    }\n    return () => {\n      toggleEventListenerWindow(false);\n    };\n  }, [isOpen]);\n\n  const textButton = isLoadingButton ? 'Сохранение...' : 'Сохранить';\n  const avatarPopup = {\n    name: 'avatar',\n    title: 'Обновить аватар',\n    buttonTitle: `${textButton}`,\n  };\n\n  const [avatarUser, setAvatar] = React.useState('');\n  const [activeButton, setActiveButton] = React.useState(true);\n  const [validAvatar, setValidAvatar] = React.useState('');\n\n  function validationAvatar(evt) {\n    if (!evt.target.validity.valid) {\n      setValidAvatar(evt.target.validationMessage);\n    }\n    setValidAvatar('');\n  }\n\n  function setAvatarUser(evt) {\n    setAvatar(evt.target.value);\n    setActiveButton(!evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n\n    setAvatar('');\n\n    onUpdateAvatar({\n      avatar: avatarUser,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name={avatarPopup.name}\n      title={avatarPopup.title}\n      buttonTitle={avatarPopup.buttonTitle}\n      isOpen={isOpen}\n      onClose={onClose}\n      active={activeButton}\n      onSubmit={handleSubmit}>\n      <MarkupForPopups.Avatar\n        avatarUser={avatarUser}\n        editAvatar={setAvatarUser}\n        avatarMessage={validAvatar}\n        validationAvatar={validationAvatar}\n      />\n    </PopupWithForm>\n  );\n}\n\nEditAvatarPopup.propTypes = {\n  isOpen: PropTypes.bool,\n  isLoadingButton: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  onUpdateAvatar: PropTypes.func.isRequired,\n  toggleEventListenerWindow: PropTypes.func.isRequired,\n};\n\nexport default EditAvatarPopup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PopupWithForm from './PopupWithForm';\n\nfunction DeleteCardPopup({\n  isOpen,\n  isCard,\n  onClose,\n  onDeleteCard,\n  isLoadingButton,\n  toggleEventListenerWindow,\n}) {\n  React.useEffect(() => {\n    if (isOpen) {\n      toggleEventListenerWindow(true);\n    }\n    return () => {\n      toggleEventListenerWindow(false);\n    };\n  }, [isOpen]);\n\n  const textButton = isLoadingButton ? 'Удаляем...' : 'Да';\n  const deletePopup = {\n    name: 'delete',\n    title: 'Вы уверены?',\n    buttonTitle: `${textButton}`,\n  };\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n\n    onDeleteCard(isCard);\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      name={deletePopup.name}\n      title={deletePopup.title}\n      buttonTitle={deletePopup.buttonTitle}\n      onSubmit={handleSubmit}\n    />\n  );\n}\n\nDeleteCardPopup.propTypes = {\n  isOpen: PropTypes.bool,\n  isCard: PropTypes.object,\n  isLoadingButton: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  onDeleteCard: PropTypes.func.isRequired,\n  toggleEventListenerWindow: PropTypes.func.isRequired,\n};\n\nexport default DeleteCardPopup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PopupWithForm from './PopupWithForm';\nimport MarkupForPopups from './MarkupForPopups';\nimport CurrentUserContext from '../context/CurrentUserContext';\n\nfunction EditProfilePopup({\n  isLoadingButton,\n  isOpen,\n  onClose,\n  onUpdateUser,\n  toggleEventListenerWindow,\n}) {\n  React.useEffect(() => {\n    if (isOpen) {\n      toggleEventListenerWindow(true);\n    }\n    return () => {\n      toggleEventListenerWindow(false);\n    };\n  }, [isOpen]);\n\n  const textButton = isLoadingButton ? 'Сохранение...' : 'Сохранить';\n  const profile = {\n    name: 'profile',\n    title: 'Редактировать форму',\n    buttonTitle: `${textButton}`,\n  };\n  const currentUser = React.useContext(CurrentUserContext);\n  const [nameProfile, setName] = React.useState({ name: '' });\n  const [description, setDescription] = React.useState({ about: '' });\n  const [activeButton, setActiveButton] = React.useState(true);\n  const [validProfile, setValidProfile] = React.useState({\n    name: '',\n    about: '',\n  });\n\n  function validationProfile(evt) {\n    if (!evt.target.validity.valid) {\n      setValidProfile({ [evt.target.name]: evt.target.validationMessage });\n    }\n    setValidProfile({ [evt.target.name]: '' });\n  }\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function setNameProfile(evt) {\n    setName(evt.target.value);\n    setActiveButton(!evt.target.value);\n  }\n  function setDescriptionProfile(evt) {\n    setDescription(evt.target.value);\n    setActiveButton(!evt.target.value);\n  }\n  function handleSubmit(evt) {\n    evt.preventDefault();\n\n    onUpdateUser({\n      name: nameProfile,\n      about: description,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={isOpen}\n      onClose={onClose}\n      active={activeButton}\n      name={profile.name}\n      title={profile.title}\n      buttonTitle={profile.buttonTitle}\n      onSubmit={handleSubmit}>\n      <MarkupForPopups.Profile\n        about={description}\n        nameProfile={nameProfile}\n        profileMessage={validProfile}\n        editName={setNameProfile}\n        editAbout={setDescriptionProfile}\n        validationProfile={validationProfile}\n      />\n    </PopupWithForm>\n  );\n}\n\nEditProfilePopup.propTypes = {\n  isOpen: PropTypes.bool,\n  isLoadingButton: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  onUpdateUser: PropTypes.func.isRequired,\n  toggleEventListenerWindow: PropTypes.func.isRequired,\n};\n\nexport default EditProfilePopup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Page({ children }) {\n  return <div className='page'>{children}</div>;\n}\n\nPage.propTypes = { children: PropTypes.object };\n\nexport default Page;\n","import React from 'react';\nimport {\n  Route,\n  Switch,\n  Redirect,\n  useHistory,\n} from 'react-router-dom';\nimport api from '../utils/api';\nimport Main from './Main';\nimport Login from './Login';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Loader from './Loader/Loader';\nimport Register from './Register';\nimport ErrorPage from './Error/ErrorPage';\nimport ImagePopup from './ImagePopup';\nimport InfoTooltip from './InfoTooltip';\nimport AddPlacePopup from './AddPlacePopup';\nimport ErrorBoundary from './Error/ErrorBoundary';\nimport ProtectedRoute from './ProtectedRoute';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport CurrentUserContext from '../context/CurrentUserContext';\nimport Navbar from './Navbar';\nimport Page from './Page';\n\nfunction App() {\n  const history = useHistory();\n  const [isCard, setIsCard] = React.useState({});\n  const [isAddPlacePopupOpen, setAddPlacePopup] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopup] = React.useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopup] = React.useState(false);\n  const [isConfirmDeletePopupOpen, setConfirmDeletePopup] = React.useState(false);\n  const [isNavbarOpen, setNavbarOpen] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({\n    name: '',\n    about: '',\n    _id: '',\n    avatar: '',\n    email: '',\n  }); // тут информация обо мне с сервера\n  const [cards, setCards] = React.useState([]); // тут информация о карточках\n  const [loading, setLoading] = React.useState(false); // лоадер при загрузке страницы\n  const [statusOk, setIsOk] = React.useState(true); // флаг для ошибки сервера\n  const [loggedIn, setLoggedIn] = React.useState(false);\n\n  const [statusError, setError] = React.useState({}); // флаг для ошибки сервера\n  const [isOpenCard, setOpenCard] = React.useState(false); // значение для попапа с картинкой\n  const [isOpenCheck, setOpenCheck] = React.useState(true); // окно информации регистрации\n  const [isTooltip, setTooltip] = React.useState({\n    isOpenTool: false,\n    status: false,\n    message: '',\n  });\n  const [selectedCard, setSelectedCard] = React.useState({}); // объект для попапа с картинкой\n  const [buttonLoading, setButtonLoading] = React.useState(false); // Лоадер для кнопки сохранить.\n  const [userAuthInfo, setUserAuthInfo] = React.useState({\n    link: '/sign-up',\n    info: '',\n  });\n\n  function infoMessage(text, bool) {\n    setTooltip({\n      ...isTooltip,\n      isOpenTool: true,\n      status: bool,\n      message: text,\n    });\n  }\n\n  function closeAllPopups() {\n    // закрытие всех попапов\n    setEditAvatarPopup(false);\n    setEditProfilePopup(false);\n    setAddPlacePopup(false);\n    setConfirmDeletePopup(false);\n    setOpenCard(false);\n    setButtonLoading(false);\n    setOpenCheck(true);\n    setTooltip({\n      ...isTooltip,\n      isOpenTool: false,\n      message: '',\n    });\n  }\n\n  function handleLogin(evt) {\n    evt.preventDefault();\n    history.push('/');\n    setLoggedIn(true);\n    setLoading(true);\n  }\n\n  function start(string) {\n    api.token = localStorage.getItem(string);\n    Promise.all([api.getInfoForUser(), api.getInfoForCards()])\n      .then(([dataUser, dataCards]) => {\n        setCurrentUser({ ...dataUser });\n        setCards([...dataCards]);\n        setUserAuthInfo({\n          info: '',\n          link: '/sign-up',\n        });\n        setIsOk(true);\n      })\n      .catch((err) => {\n        console.error('Информация сервера с ошибкой', err.message);\n        setError(err);\n        setIsOk(false);\n        localStorage.removeItem('jwt');\n        setLoggedIn(false);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }\n\n  function onLogin(evt, emailAndPassword) {\n    setButtonLoading(true);\n    api\n      .authorizationPost({\n        ...emailAndPassword,\n      })\n      .then((data) => {\n        setButtonLoading(false);\n        if (data.token) {\n          localStorage.setItem('jwt', data.token);\n          handleLogin(evt);\n          start('jwt');\n          setOpenCheck(false);\n          infoMessage('Добро пожаловать на проект Mesto', true);\n        } else if (!data.token && data.message) {\n          infoMessage(data.message, false);\n        }\n      })\n      .catch((err) => {\n        infoMessage('', false);\n        console.error(err);\n      })\n      .finally(() => {\n        setButtonLoading(false);\n      });\n  }\n\n  function onRegister(arg) {\n    setButtonLoading(true);\n    api\n      .register(arg)\n      .then((res) => {\n        if (res.data) {\n          setButtonLoading(false);\n          infoMessage('', true);\n          localStorage.setItem('email', res.data.email);\n          history.push('/sign-in');\n          setUserAuthInfo({ ...userAuthInfo, link: '/sign-up' });\n        } else if (res.error) {\n          infoMessage(res.error, false);\n        } else if (res.message) {\n          infoMessage(res.message, false);\n        } else {\n          console.error('другая ошибка: res');\n        }\n      })\n      .catch((err) => {\n        infoMessage('', false);\n        console.error(err);\n      })\n      .finally(() => {\n        setButtonLoading(false);\n      });\n  }\n\n  function handleLogOut(evt) {\n    evt.preventDefault();\n    setLoggedIn(false);\n  }\n\n  function signOut(evt) {\n    if (evt.target.text === 'Выйти') {\n      if (localStorage.getItem('jwt')) {\n        localStorage.removeItem('jwt');\n        localStorage.removeItem('email');\n        setCurrentUser({\n          name: '',\n          about: '',\n          _id: '',\n          avatar: '',\n          email: '',\n        });\n        handleLogOut(evt);\n        history.push('/sign-in');\n      } else {\n        localStorage.clear();\n        handleLogOut(evt);\n        history.push('/sign-in');\n      }\n    } else if (evt.target.text === 'Регистрация') {\n      history.push('/sign-up');\n      setUserAuthInfo({ ...userAuthInfo, link: '/sign-in' });\n    } else if (evt.target.text === 'Вход') {\n      history.push('/sign-in');\n      setUserAuthInfo({ ...userAuthInfo, link: '/sign-up' });\n    }\n  }\n\n  function toggleNavbar(evt) {\n    if (evt.target.checked) {\n      setNavbarOpen(true);\n    } else {\n      setNavbarOpen(false);\n    }\n  }\n\n  function handleUpdateUser({ name, about }) {\n    // получаем новую информацию пользователя  с сервера\n    setButtonLoading(true);\n\n    api\n      .updateUserInfo({ name, about })\n      .then((infoUser) => {\n        setCurrentUser({\n          ...currentUser,\n          name: infoUser.name,\n          about: infoUser.about,\n        });\n      })\n      .catch((err) => console.error('Информация обновления пользователя с ошибкой', err))\n      .finally(() => {\n        setButtonLoading(false);\n        closeAllPopups();\n      });\n  }\n\n  function handleUpdateAvatar({ avatar }) {\n    setButtonLoading(true);\n    // получаем обновленный аватар с сервера\n    api\n      .updateUserAvatar({ avatar })\n      .then((infoAvatar) => {\n        setCurrentUser({ ...currentUser, avatar: infoAvatar.avatar });\n      })\n      .catch((err) => console.error('Информация обновления пользователя с ошибкой', err))\n      .finally(() => {\n        setButtonLoading(false);\n        closeAllPopups();\n      });\n  }\n\n  function handleAddPlace({ name, link }) {\n    setButtonLoading(true);\n    // получаем новую карточку с сервера и вставляем в начало\n    api\n      .addCard({ name, link })\n      .then((newCard) => {\n        if (!newCard) {\n          return Promise.reject(new Error('ошибка данных'));\n        }\n        return setCards([newCard, ...cards]);\n      })\n      .catch((err) => console.error('Информация обновления карточки с ошибкой', err))\n      .finally(() => {\n        closeAllPopups();\n      });\n  }\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopup(true);\n  }\n  function handleEditProfileClick() {\n    setEditProfilePopup(true);\n  }\n  function handleAddPlaceClick() {\n    setAddPlacePopup(true);\n  }\n  function handleConfirmDeleteClick(card) {\n    setConfirmDeletePopup(true);\n    setIsCard(card);\n  }\n  function handleCardClick({ ...props }) {\n    // для открытия попапа с картинкой\n    setSelectedCard({ ...props });\n    setOpenCard(true);\n  }\n\n  function handleCardLike({ likes, _id }) {\n    // получаем лайки с сервера\n    const isLiked = likes.some((i) => i === currentUser._id);\n\n    api\n      .changeLikeCardStatus(_id, !isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => (c._id === _id ? newCard : c));\n        setCards(newCards);\n      })\n      .catch((err) => console.error('Информация по карточкам с ошибкой', err.message));\n  }\n\n  function handleCardDelete({ _id }) {\n    // удаляем карточку\n    const idCard = _id;\n    setButtonLoading(true);\n    api\n      .deleteCard(_id)\n      .then(() => {\n        setCards(cards.filter((card) => card._id !== idCard));\n      })\n      .catch((err) => console.error('Информация по карточкам с ошибкой', err.message))\n      .finally(() => {\n        setButtonLoading(false);\n        closeAllPopups();\n      });\n  }\n\n  function closeAllPopupsEsc(evt) {\n    if (evt.key === 'Escape') {\n      closeAllPopups();\n    }\n  }\n\n  async function toggleEventListenerWindow(bool) {\n    if (bool) {\n      window.addEventListener('keydown', closeAllPopupsEsc);\n    } else {\n      window.removeEventListener('keydown', closeAllPopupsEsc);\n    }\n  }\n\n  React.useEffect(() => {\n    if (localStorage.getItem('jwt')) {\n      setLoading(true);\n      setLoggedIn(true);\n      start('jwt');\n    } else {\n      localStorage.clear();\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n    {loggedIn\n      ? <Redirect to='/' />\n      : <Redirect to='/sign-in' />\n    }\n      <Page>\n        <CurrentUserContext.Provider value={currentUser}>\n          <ErrorBoundary>\n          {isNavbarOpen && (\n            <Navbar\n              selectorPlace={'page'}\n              link={userAuthInfo.link}\n              signOut={signOut}\n            />\n          )}\n            <Header\n              selectorPlace={'header'}\n              link={userAuthInfo.link}\n              isNavbarOpen={isNavbarOpen}\n              signOut={signOut}\n              toggleNavbar={toggleNavbar}\n            />\n            <InfoTooltip\n              isOpen={isTooltip}\n              onClose={closeAllPopups}\n              toggleEventListenerWindow={toggleEventListenerWindow}\n            />\n            <Switch>\n              <ProtectedRoute exact path='/' loggedIn={loggedIn}>\n              {loading && <Loader />}\n                <React.Fragment>\n                  <Main\n                    cards={cards}\n                    handleCardLike={handleCardLike}\n                    onAddPlace={handleAddPlaceClick}\n                    handleCardClick={handleCardClick}\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    handleCardDelete={handleConfirmDeleteClick}\n                  />\n                  <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    isLoadingButton={buttonLoading}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlace}\n                    toggleEventListenerWindow={toggleEventListenerWindow}\n                  />\n                  <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    isLoadingButton={buttonLoading}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                    toggleEventListenerWindow={toggleEventListenerWindow}\n                  />\n                  <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    isLoadingButton={buttonLoading}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                    toggleEventListenerWindow={toggleEventListenerWindow}\n                  />\n                  <DeleteCardPopup\n                    isCard={isCard}\n                    isLoadingButton={buttonLoading}\n                    isOpen={isConfirmDeletePopupOpen}\n                    onClose={closeAllPopups}\n                    onDeleteCard={handleCardDelete}\n                    toggleEventListenerWindow={toggleEventListenerWindow}\n                  />\n                  <ImagePopup\n                    isOpen={isOpenCard}\n                    selectedCard={selectedCard}\n                    onClose={closeAllPopups}\n                    toggleEventListenerWindow={toggleEventListenerWindow}\n                  />\n                </React.Fragment>\n              {!statusOk && <ErrorPage error={statusError} />}\n              </ProtectedRoute>\n              {!loading && (\n                <Route path='/sign-in' exact>\n                  <Login\n                    isOpen={isOpenCheck}\n                    isLoadingButton={buttonLoading}\n                    onLogin={onLogin}\n                    handleLogin={handleLogin}\n                  />\n                </Route>\n              )}\n              <Route path='/sign-up' exact>\n                <Register\n                  isOpen={isOpenCheck}\n                  isLoadingButton={buttonLoading}\n                  signOut={signOut}\n                  onRegister={onRegister}\n                />\n              </Route>\n            </Switch>\n            {loggedIn && <Footer />}\n          </ErrorBoundary>\n        </CurrentUserContext.Provider>\n      </Page>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}